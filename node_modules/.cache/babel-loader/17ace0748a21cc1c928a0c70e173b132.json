{"ast":null,"code":"var _jsxFileName = \"/Users/matthewcoppola/Desktop/Programming/udemy-courses/react-redux/dice_playground/src/index.js\";\nimport React from 'react';\nimport ReactDom from 'react-dom'; // Import Components\n\nimport DefenseActions from './components/DefenseActions';\nimport OffenseActions from './components/OffenseActions';\nimport UmpireActions from './components/UmpireActions';\nimport GameOutput from './components/GameOutput';\nimport GameStats from './components/GameStats';\nimport ApiTest from './components/API_Test';\nimport { umpIndicator, pitchCount } from './umpire/pitchLogic';\nimport { outsTracker } from './umpire/gameFlow';\nimport './style.css';\n\nclass GameConsole extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stats: {\n        inning: 0.5,\n        strikes: 0,\n        balls: 0,\n        outs: 0\n      },\n      output: ['Waiting on first pitch to begin the game...'],\n      umpireOverwrite: false\n    };\n    this.handleDefenseAction = this.handleDefenseAction.bind(this);\n    this.handleOffenseAction = this.handleOffenseAction.bind(this);\n    this.handleUmpireAction = this.handleUmpireAction.bind(this);\n    this.apiCall = this.apiCall.bind(this);\n  }\n\n  componentDidUpdate() {\n    let endOfInning = outsTracker(this.state.stats.outs);\n\n    if (endOfInning) {\n      let inningOver = \"[ UMPIRE ] Three outs.  Inning is over.  Click 'Pitch' to start new Inning.\";\n      this.setState(state => {\n        state.stats.outs = 0;\n        state.stats.inning += 0.5;\n        state.stats.strikes = 0;\n        state.stats.balls = 0;\n        const output = [inningOver, ...state.output];\n        return {\n          output\n        };\n      });\n    }\n\n    if (this.state.umpireOverwrite) {\n      this.handleDefenseAction({\n        text: 'Umpire Overwrite',\n        defenseType: 'umpireOverwrite'\n      });\n      this.setState(state => {\n        state.umpireOverwrite = false;\n      });\n    }\n  }\n\n  apiCall() {\n    console.log('Working...');\n  }\n\n  handleDefenseAction(defenseAction) {\n    let defense = '[ DEFENSE ] ';\n    let pitchCall = 'Umpire Overwrites Balls or Strikes';\n\n    if (defenseAction.defenseType === 'fielder' || defenseAction.defenseType === 'pick-off') {\n      this.setState(state => {\n        const output = [defense.concat(defenseAction.text), ...state.output];\n        return {\n          output\n        };\n      });\n    } else if (defenseAction.defenseType === 'pitcher' || defenseAction.defenseType === 'umpireOverwrite') {\n      this.setState(state => {\n        if (defenseAction.defenseType === 'pitcher') {\n          let pitchResults = pitchCount(defenseAction.roll, this.state.stats);\n          state.stats.balls = pitchResults.balls;\n          state.stats.strikes = pitchResults.strikes;\n          pitchCall = pitchResults.pitchCall;\n        }\n\n        const currentBatter = umpIndicator(this.state.stats);\n        const batterReset = 'resetting balls and strikes based on umpIndicator...';\n\n        if (currentBatter.walk || currentBatter.strikeout) {\n          state.stats.balls = 0;\n          state.stats.strikes = 0;\n        }\n\n        if (currentBatter.strikeout === true) {\n          state.stats.outs += 1;\n        }\n\n        const output = [!currentBatter.text ? defense.concat(defenseAction.text, ' >>> ', pitchCall) : defense.concat(defenseAction.text, ' -- ', pitchCall, ' -- ', currentBatter.text, ' -- ', batterReset), ...state.output];\n        return {\n          output\n        };\n      });\n    }\n  }\n\n  handleOffenseAction(offenseAction) {\n    let offense = '[ OFFENSE ] ';\n    this.setState(state => {\n      const output = [offense.concat(offenseAction), ...state.output];\n      return {\n        output\n      };\n    });\n  }\n\n  handleUmpireAction(umpireAction) {\n    let umpire = '[ UMPIRE ] ';\n    this.setState(state => {\n      const output = [umpire.concat(umpireAction.output), ...state.output];\n\n      if (umpireAction.inning) {\n        state.stats.inning < 0 ? state.stats.inning = 0 : state.stats.inning += umpireAction.inning;\n      } else if (umpireAction.out) {\n        state.stats.outs < 0 ? state.stats.outs = 0 : state.stats.outs += umpireAction.out;\n      } else if (umpireAction.strike) {\n        state.stats.strikes < 0 ? state.stats.strikes = 0 : state.stats.strikes += umpireAction.strike;\n        state.umpireOverwrite = true;\n      } else if (umpireAction.ball) {\n        state.stats.balls < 0 ? state.stats.balls = 0 : state.stats.balls += umpireAction.ball;\n        state.umpireOverwrite = true;\n      } else if (umpireAction.resetInning) {\n        state.stats.outs = 0;\n        state.stats.balls = 0;\n        state.stats.strikes = 0;\n      }\n\n      return {\n        output\n      };\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Diceball!\"), React.createElement(\"div\", {\n      className: \"gameconsole\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(UmpireActions, {\n      onUmpireAction: this.handleUmpireAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(OffenseActions, {\n      onOffenseAction: this.handleOffenseAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(DefenseActions, {\n      onDefenseAction: this.handleDefenseAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(GameStats, {\n      stats: this.state.stats,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"gameinfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(GameOutput, {\n      output: this.state.output,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(ApiTest, {\n      apiCall: this.apiCall,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })));\n  }\n\n}\n\nReactDom.render(React.createElement(GameConsole, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 187\n  },\n  __self: this\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/Users/matthewcoppola/Desktop/Programming/udemy-courses/react-redux/dice_playground/src/index.js"],"names":["React","ReactDom","DefenseActions","OffenseActions","UmpireActions","GameOutput","GameStats","ApiTest","umpIndicator","pitchCount","outsTracker","GameConsole","Component","constructor","props","state","stats","inning","strikes","balls","outs","output","umpireOverwrite","handleDefenseAction","bind","handleOffenseAction","handleUmpireAction","apiCall","componentDidUpdate","endOfInning","inningOver","setState","text","defenseType","console","log","defenseAction","defense","pitchCall","concat","pitchResults","roll","currentBatter","batterReset","walk","strikeout","offenseAction","offense","umpireAction","umpire","out","strike","ball","resetInning","render","document","querySelector"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDom from 'react-dom';\n\n// Import Components\nimport DefenseActions from './components/DefenseActions';\nimport OffenseActions from './components/OffenseActions';\nimport UmpireActions from './components/UmpireActions';\nimport GameOutput from './components/GameOutput';\nimport GameStats from './components/GameStats';\nimport ApiTest from './components/API_Test';\n\nimport { umpIndicator, pitchCount } from './umpire/pitchLogic';\nimport { outsTracker } from './umpire/gameFlow';\n\nimport './style.css';\n\nclass GameConsole extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tstats: {\n\t\t\t\tinning: 0.5,\n\t\t\t\tstrikes: 0,\n\t\t\t\tballs: 0,\n\t\t\t\touts: 0\n\t\t\t},\n\t\t\toutput: [\n\t\t\t\t'Waiting on first pitch to begin the game...'\n\t\t\t],\n\t\t\tumpireOverwrite: false\n\t\t};\n\n\t\tthis.handleDefenseAction = this.handleDefenseAction.bind(this);\n\t\tthis.handleOffenseAction = this.handleOffenseAction.bind(this);\n\t\tthis.handleUmpireAction = this.handleUmpireAction.bind(this);\n\t\tthis.apiCall = this.apiCall.bind(this);\n\t}\n\n\tcomponentDidUpdate () {\n\t\tlet endOfInning = outsTracker(this.state.stats.outs);\n\t\tif (endOfInning) {\n\t\t\tlet inningOver = \"[ UMPIRE ] Three outs.  Inning is over.  Click 'Pitch' to start new Inning.\";\n\t\t\tthis.setState((state) => {\n\t\t\t\tstate.stats.outs = 0;\n\t\t\t\tstate.stats.inning += 0.5;\n\t\t\t\tstate.stats.strikes = 0;\n\t\t\t\tstate.stats.balls = 0;\n\n\t\t\t\tconst output = [\n\t\t\t\t\tinningOver,\n\t\t\t\t\t...state.output\n\t\t\t\t];\n\t\t\t\treturn { output };\n\t\t\t});\n\t\t}\n\n\t\tif (this.state.umpireOverwrite) {\n\t\t\tthis.handleDefenseAction({ text: 'Umpire Overwrite', defenseType: 'umpireOverwrite' });\n\t\t\tthis.setState((state) => {\n\t\t\t\tstate.umpireOverwrite = false;\n\t\t\t});\n\t\t}\n\t}\n\n\tapiCall () {\n\t\tconsole.log('Working...');\n\t}\n\n\thandleDefenseAction (defenseAction) {\n\t\tlet defense = '[ DEFENSE ] ';\n\t\tlet pitchCall = 'Umpire Overwrites Balls or Strikes';\n\n\t\tif (defenseAction.defenseType === 'fielder' || defenseAction.defenseType === 'pick-off') {\n\t\t\tthis.setState((state) => {\n\t\t\t\tconst output = [\n\t\t\t\t\tdefense.concat(defenseAction.text),\n\t\t\t\t\t...state.output\n\t\t\t\t];\n\t\t\t\treturn { output };\n\t\t\t});\n\t\t} else if (defenseAction.defenseType === 'pitcher' || defenseAction.defenseType === 'umpireOverwrite') {\n\t\t\tthis.setState((state) => {\n\t\t\t\tif (defenseAction.defenseType === 'pitcher') {\n\t\t\t\t\tlet pitchResults = pitchCount(defenseAction.roll, this.state.stats);\n\n\t\t\t\t\tstate.stats.balls = pitchResults.balls;\n\t\t\t\t\tstate.stats.strikes = pitchResults.strikes;\n\t\t\t\t\tpitchCall = pitchResults.pitchCall;\n\t\t\t\t}\n\n\t\t\t\tconst currentBatter = umpIndicator(this.state.stats);\n\t\t\t\tconst batterReset = 'resetting balls and strikes based on umpIndicator...';\n\n\t\t\t\tif (currentBatter.walk || currentBatter.strikeout) {\n\t\t\t\t\tstate.stats.balls = 0;\n\t\t\t\t\tstate.stats.strikes = 0;\n\t\t\t\t}\n\n\t\t\t\tif (currentBatter.strikeout === true) {\n\t\t\t\t\tstate.stats.outs += 1;\n\t\t\t\t}\n\n\t\t\t\tconst output = [\n\t\t\t\t\t!currentBatter.text\n\t\t\t\t\t\t? defense.concat(defenseAction.text, ' >>> ', pitchCall)\n\t\t\t\t\t\t: defense.concat(\n\t\t\t\t\t\t\t\tdefenseAction.text,\n\t\t\t\t\t\t\t\t' -- ',\n\t\t\t\t\t\t\t\tpitchCall,\n\t\t\t\t\t\t\t\t' -- ',\n\t\t\t\t\t\t\t\tcurrentBatter.text,\n\t\t\t\t\t\t\t\t' -- ',\n\t\t\t\t\t\t\t\tbatterReset\n\t\t\t\t\t\t\t),\n\t\t\t\t\t...state.output\n\t\t\t\t];\n\n\t\t\t\treturn { output };\n\t\t\t});\n\t\t}\n\t}\n\n\thandleOffenseAction (offenseAction) {\n\t\tlet offense = '[ OFFENSE ] ';\n\t\tthis.setState((state) => {\n\t\t\tconst output = [\n\t\t\t\toffense.concat(offenseAction),\n\t\t\t\t...state.output\n\t\t\t];\n\t\t\treturn { output };\n\t\t});\n\t}\n\n\thandleUmpireAction (umpireAction) {\n\t\tlet umpire = '[ UMPIRE ] ';\n\n\t\tthis.setState((state) => {\n\t\t\tconst output = [\n\t\t\t\tumpire.concat(umpireAction.output),\n\t\t\t\t...state.output\n\t\t\t];\n\t\t\tif (umpireAction.inning) {\n\t\t\t\tstate.stats.inning < 0 ? (state.stats.inning = 0) : (state.stats.inning += umpireAction.inning);\n\t\t\t} else if (umpireAction.out) {\n\t\t\t\tstate.stats.outs < 0 ? (state.stats.outs = 0) : (state.stats.outs += umpireAction.out);\n\t\t\t} else if (umpireAction.strike) {\n\t\t\t\tstate.stats.strikes < 0 ? (state.stats.strikes = 0) : (state.stats.strikes += umpireAction.strike);\n\t\t\t\tstate.umpireOverwrite = true;\n\t\t\t} else if (umpireAction.ball) {\n\t\t\t\tstate.stats.balls < 0 ? (state.stats.balls = 0) : (state.stats.balls += umpireAction.ball);\n\t\t\t\tstate.umpireOverwrite = true;\n\t\t\t} else if (umpireAction.resetInning) {\n\t\t\t\tstate.stats.outs = 0;\n\t\t\t\tstate.stats.balls = 0;\n\t\t\t\tstate.stats.strikes = 0;\n\t\t\t}\n\t\t\treturn { output };\n\t\t});\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<header>Diceball!</header>\n\t\t\t\t{/* <div className=\"ui four column grid container segment\"> */}\n\t\t\t\t<div className=\"gameconsole\">\n\t\t\t\t\t<div className=\"actions\">\n\t\t\t\t\t\t<UmpireActions onUmpireAction={this.handleUmpireAction} />\n\t\t\t\t\t\t<OffenseActions onOffenseAction={this.handleOffenseAction} />\n\t\t\t\t\t\t<DefenseActions onDefenseAction={this.handleDefenseAction} />\n\t\t\t\t\t\t<GameStats stats={this.state.stats} />\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* <div className=\"ui two column centered grid container segment\"> */}\n\t\t\t\t\t<div className=\"gameinfo\">\n\t\t\t\t\t\t<GameOutput output={this.state.output} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<ApiTest apiCall={this.apiCall} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nReactDom.render(<GameConsole />, document.querySelector('#root'));\n"]},"metadata":{},"sourceType":"module"}