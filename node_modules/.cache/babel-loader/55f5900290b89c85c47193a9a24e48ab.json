{"ast":null,"code":"var logLevel = 'info';\n\nfunction dummy() {}\n\nfunction shouldLog(level) {\n  var shouldLog = logLevel === 'info' && level === 'info' || ['info', 'warning'].indexOf(logLevel) >= 0 && level === 'warning' || ['info', 'warning', 'error'].indexOf(logLevel) >= 0 && level === 'error';\n  return shouldLog;\n}\n\nfunction logGroup(logFn) {\n  return function (level, msg) {\n    if (shouldLog(level)) {\n      logFn(msg);\n    }\n  };\n}\n\nmodule.exports = function (level, msg) {\n  if (shouldLog(level)) {\n    if (level === 'info') {// console.log(msg);\n    } else if (level === 'warning') {\n      console.warn(msg);\n    } else if (level === 'error') {\n      console.error(msg);\n    }\n  }\n};\n/* eslint-disable node/no-unsupported-features/node-builtins */\n\n\nvar group = console.group || dummy;\nvar groupCollapsed = console.groupCollapsed || dummy;\nvar groupEnd = console.groupEnd || dummy;\n/* eslint-enable node/no-unsupported-features/node-builtins */\n\nmodule.exports.group = logGroup(group);\nmodule.exports.groupCollapsed = logGroup(groupCollapsed);\nmodule.exports.groupEnd = logGroup(groupEnd);\n\nmodule.exports.setLogLevel = function (level) {\n  logLevel = level;\n};\n\nmodule.exports.formatError = function (err) {\n  var message = err.message;\n  var stack = err.stack;\n\n  if (!stack) {\n    return message;\n  } else if (stack.indexOf(message) < 0) {\n    return message + '\\n' + stack;\n  } else {\n    return stack;\n  }\n};","map":{"version":3,"sources":["/Users/matthewcoppola/Desktop/Programming/udemy-courses/react-redux/dice_playground/node_modules/webpack/hot/log.js"],"names":["logLevel","dummy","shouldLog","level","indexOf","logGroup","logFn","msg","module","exports","console","warn","error","group","groupCollapsed","groupEnd","setLogLevel","formatError","err","message","stack"],"mappings":"AAAA,IAAIA,QAAQ,GAAG,MAAf;;AAEA,SAASC,KAAT,GAAkB,CAAE;;AAEpB,SAASC,SAAT,CAAoBC,KAApB,EAA2B;AAC1B,MAAID,SAAS,GACXF,QAAQ,KAAK,MAAb,IAAuBG,KAAK,KAAK,MAAlC,IACC,CACA,MADA,EAEA,SAFA,EAGCC,OAHD,CAGSJ,QAHT,KAGsB,CAHtB,IAIAG,KAAK,KAAK,SALX,IAMC,CACA,MADA,EAEA,SAFA,EAGA,OAHA,EAICC,OAJD,CAISJ,QAJT,KAIsB,CAJtB,IAKAG,KAAK,KAAK,OAZZ;AAaA,SAAOD,SAAP;AACA;;AAED,SAASG,QAAT,CAAmBC,KAAnB,EAA0B;AACzB,SAAO,UAAUH,KAAV,EAAiBI,GAAjB,EAAsB;AAC5B,QAAIL,SAAS,CAACC,KAAD,CAAb,EAAsB;AACrBG,MAAAA,KAAK,CAACC,GAAD,CAAL;AACA;AACD,GAJD;AAKA;;AAEDC,MAAM,CAACC,OAAP,GAAiB,UAAUN,KAAV,EAAiBI,GAAjB,EAAsB;AACtC,MAAIL,SAAS,CAACC,KAAD,CAAb,EAAsB;AACrB,QAAIA,KAAK,KAAK,MAAd,EAAsB,CACrB;AACA,KAFD,MAEO,IAAIA,KAAK,KAAK,SAAd,EAAyB;AAC/BO,MAAAA,OAAO,CAACC,IAAR,CAAaJ,GAAb;AACA,KAFM,MAEA,IAAIJ,KAAK,KAAK,OAAd,EAAuB;AAC7BO,MAAAA,OAAO,CAACE,KAAR,CAAcL,GAAd;AACA;AACD;AACD,CAVD;AAYA;;;AACA,IAAIM,KAAK,GAAGH,OAAO,CAACG,KAAR,IAAiBZ,KAA7B;AACA,IAAIa,cAAc,GAAGJ,OAAO,CAACI,cAAR,IAA0Bb,KAA/C;AACA,IAAIc,QAAQ,GAAGL,OAAO,CAACK,QAAR,IAAoBd,KAAnC;AACA;;AAEAO,MAAM,CAACC,OAAP,CAAeI,KAAf,GAAuBR,QAAQ,CAACQ,KAAD,CAA/B;AAEAL,MAAM,CAACC,OAAP,CAAeK,cAAf,GAAgCT,QAAQ,CAACS,cAAD,CAAxC;AAEAN,MAAM,CAACC,OAAP,CAAeM,QAAf,GAA0BV,QAAQ,CAACU,QAAD,CAAlC;;AAEAP,MAAM,CAACC,OAAP,CAAeO,WAAf,GAA6B,UAAUb,KAAV,EAAiB;AAC7CH,EAAAA,QAAQ,GAAGG,KAAX;AACA,CAFD;;AAIAK,MAAM,CAACC,OAAP,CAAeQ,WAAf,GAA6B,UAAUC,GAAV,EAAe;AAC3C,MAAIC,OAAO,GAAGD,GAAG,CAACC,OAAlB;AACA,MAAIC,KAAK,GAAGF,GAAG,CAACE,KAAhB;;AACA,MAAI,CAACA,KAAL,EAAY;AACX,WAAOD,OAAP;AACA,GAFD,MAEO,IAAIC,KAAK,CAAChB,OAAN,CAAce,OAAd,IAAyB,CAA7B,EAAgC;AACtC,WAAOA,OAAO,GAAG,IAAV,GAAiBC,KAAxB;AACA,GAFM,MAEA;AACN,WAAOA,KAAP;AACA;AACD,CAVD","sourcesContent":["var logLevel = 'info';\n\nfunction dummy () {}\n\nfunction shouldLog (level) {\n\tvar shouldLog =\n\t\t(logLevel === 'info' && level === 'info') ||\n\t\t([\n\t\t\t'info',\n\t\t\t'warning'\n\t\t].indexOf(logLevel) >= 0 &&\n\t\t\tlevel === 'warning') ||\n\t\t([\n\t\t\t'info',\n\t\t\t'warning',\n\t\t\t'error'\n\t\t].indexOf(logLevel) >= 0 &&\n\t\t\tlevel === 'error');\n\treturn shouldLog;\n}\n\nfunction logGroup (logFn) {\n\treturn function (level, msg) {\n\t\tif (shouldLog(level)) {\n\t\t\tlogFn(msg);\n\t\t}\n\t};\n}\n\nmodule.exports = function (level, msg) {\n\tif (shouldLog(level)) {\n\t\tif (level === 'info') {\n\t\t\t// console.log(msg);\n\t\t} else if (level === 'warning') {\n\t\t\tconsole.warn(msg);\n\t\t} else if (level === 'error') {\n\t\t\tconsole.error(msg);\n\t\t}\n\t}\n};\n\n/* eslint-disable node/no-unsupported-features/node-builtins */\nvar group = console.group || dummy;\nvar groupCollapsed = console.groupCollapsed || dummy;\nvar groupEnd = console.groupEnd || dummy;\n/* eslint-enable node/no-unsupported-features/node-builtins */\n\nmodule.exports.group = logGroup(group);\n\nmodule.exports.groupCollapsed = logGroup(groupCollapsed);\n\nmodule.exports.groupEnd = logGroup(groupEnd);\n\nmodule.exports.setLogLevel = function (level) {\n\tlogLevel = level;\n};\n\nmodule.exports.formatError = function (err) {\n\tvar message = err.message;\n\tvar stack = err.stack;\n\tif (!stack) {\n\t\treturn message;\n\t} else if (stack.indexOf(message) < 0) {\n\t\treturn message + '\\n' + stack;\n\t} else {\n\t\treturn stack;\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}